name: Build

on:
  push:
    branches: [ master ]

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  get-date:
    runs-on: ubuntu-latest
    outputs:
      date: ${{ steps.date.outputs.date }}
    steps:
      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
  build-linux:
    needs: get-date
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        
    - name: Cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Build
      run: cargo build --release
      
    - name: Upload Linux Artifact
      uses: actions/upload-artifact@v4.4.3
      with:
        name: benchinator
        path: target/release/benchinator
        retention-days: 7
        if-no-files-found: error

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release-${{ needs.get-date.outputs.date }}-${{ github.sha }}
        release_name: Release ${{ github.ref_name }} ${{ needs.get-date.outputs.date }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: target/release/benchinator
        asset_name: benchinator
        asset_content_type: application/octet-stream


  build-windows:
    needs: get-date
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        
    - name: Cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Build
      run: cargo build --release
      
    - name: Upload Windows Artifact
      uses: actions/upload-artifact@v4.4.3
      with:
        name: benchinator
        path: target/release/benchinator.exe
        retention-days: 7
        if-no-files-found: error

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release-${{ needs.get-date.outputs.date }}-${{ github.sha }}
        release_name: Release ${{ github.ref_name }} ${{ needs.get-date.outputs.date }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: target/release/benchinator.exe
        asset_name: benchinator.exe
        asset_content_type: application/octet-stream

